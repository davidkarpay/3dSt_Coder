{
  "permissions": {
    "allow": [
      "Bash(grep:*)",
      "Bash(cat:*)",
      "Bash(python -m pytest llm_server/tests/ -v)",
      "Bash(python3 -m pytest llm_server/tests/ -v)",
      "Bash(where python)",
      "Bash(poetry --version)",
      "Bash(pip install:*)",
      "Bash(powershell:*)",
      "Bash(where:*)",
      "Bash(dir:*)",
      "Bash(echo $PATH)",
      "Bash(choco:*)",
      "Bash(refreshenv)",
      "Bash(/c/Python312/python.exe --version)",
      "Bash(/c/Python312/python.exe run_tests.py)",
      "Bash(/c/Python312/python.exe -m pip install pydantic fastapi uvicorn aiosqlite gitpython requests aiofiles sse-starlette)",
      "Bash(/c/Python312/python.exe -m pip install pydantic-settings)",
      "Bash(set PYTHONIOENCODING=utf-8)",
      "Bash(/c/Python312/python.exe -m pip install httpx)",
      "Bash(curl:*)",
      "Bash(set LLM_ENGINE_TYPE=ollama)",
      "Bash(set LLM_MODEL_PATH=adrienbrault/saul-instruct-v1:q4_k_m)",
      "Bash(/c/Python312/python.exe start_with_ollama.py:*)",
      "Bash(/c/Python312/python.exe start_saul.py)",
      "Bash(/c/Python312/python.exe -m api.main)",
      "Bash(ollama pull:*)",
      "Bash(set LLM_MODEL_PATH=mistral:7b-instruct-q4_K_M)",
      "Bash(ollama rm:*)",
      "Bash(/c/Python312/python.exe start_mistral.py)",
      "Bash(/c/Python312/python.exe -c \"import json, sys; data = json.load(sys.stdin); print(''''Available Ollama models:''''); [print(f''''  âœ… {m[\"\"name\"\"]} ({m[\"\"size\"\"]/1024**3:.1f}GB)'''') for m in data[''''models'''']]\")",
      "Bash(/c/Python312/python.exe -c \"import json, sys; data = json.load(sys.stdin); [print(f''''  - {m[\"\"name\"\"]} ({m[\"\"size\"\"]/1024**3:.1f}GB)'''') for m in data[''''models'''']]\")",
      "Bash(ollama list:*)",
      "Bash(git remote add:*)",
      "Bash(git add:*)"
    ],
    "deny": [],
    "ask": []
  }
}